% prepare data
y_sp=[1400.5 1402.81 1406.09 1400.95 1381.96 1386.72 1399.48 1400.63 1396.71 1409.12 1414.76 1412.9 1407.29 1409.84 1413.04 1411.56 1413.21 1425.49 1427.09 1422.48 1425.55 1423.53 1418.3 1410.76 1416.9 1426.84 1424.73 1418.3 1416.6 1418.34 1409.71 1412.84 1412.11 1414.85 1423.82 1430.73 1431.9 1430.62 1426.37 1430.5 1422.95 1427.99 1440.13 1423.9 1422.18 1420.62 1428.82 1438.24 1445.94 1448.39 1446.99 1448 1450.02 1448.31 1438.06 1433.37 1444.26 1455.3 1456.81 1455.54 1459.68 1457.63 1456.38 1451.19 1449.37 1399.04 1406.82 1403.17 1387.17 1374.12 1395.41 1391.97 1401.89 1402.84 1406.6 1377.95 1387.17 1392.28 1386.95 1402.06 1410.94 1435.04 1434.54 1436.11 1437.5 1428.61 1417.23 1422.53 1420.86 1424.55 1437.77 1439.37 1443.76 1444.61 1448.39 1438.87 1447.8 1452.85 1468.33 1471.48 1472.5 1470.73 1484.35 1480.93 1480.41 1495.42 1494.25 1494.07 1482.37 1486.3 1495.92 1502.39 1505.62 1509.48 1507.72 1512.58 1491.47 1505.85 1503.15 1501.19 1514.14 1512.75 1522.75 1525.1 1524.12 1522.28 1507.51 1515.73 1518.11 1530.23 1530.62 1536.34 1539.18 1530.95 1517.38 1490.72 1507.67 1509.12 1493 1515.67 1522.97 1532.91 1531.05 1533.7 1512.84 1522.19 1502.56 1497.74 1492.89 1506.34 1505.71 1503.35 1519.43 1524.87 1525.4 1530.44 1531.85 1510.12 1518.76 1547.7 1552.5 1549.52 1549.37 1546.17 1553.08 1534.1 1541.57 1511.04 1518.09 1482.66 1458.95 1473.91 1455.27 1465.81 1472.2 1433.06 1467.67 1476.71 1497.49 1453.09 1453.64 1452.92 1426.54 1406.7 1411.27 1445.94 1445.55 1447.12 1464.07 1462.5 1479.37 1466.79 1432.36 1463.76 1457.64 1473.99 1489.42 1472.29 1478.55 1453.55 1451.7 1471.49 1471.56 1483.95 1484.25 1476.65 1519.78 1529.03 1518.75 1525.75 1517.73 1517.21 1525.42 1531.38 1526.75 1547.04 1546.63 1539.59 1542.84 1557.59 1552.58 1565.15 1562.47 1554.41 1561.8 1548.71 1538.53 1541.24 1540.08 1500.63 1506.33 1519.59 1515.88 1514.4 1535.28 1540.98 1531.02 1549.38 1508.44 1509.65 1502.17 1520.27 1475.62 1474.77 1453.7 1439.18 1481.05 1470.58 1451.15 1458.74 1433.27 1439.7 1416.77 1440.7 1407.22 1428.23 1469.02 1469.72 1481.14 1472.42 1462.79 1485.01 1507.34 1504.66 1515.96 1477.65 1486.59 1488.41 1467.95 1445.9 1454.98 1453 1460.12 1484.46 1496.45 1497.66 1476.27 1478.49 1468.36 1447.16 1447.16 1411.63 1416.18 1390.19 1409.13 1420.33 1401.02 1416.25 1380.95 1373.2 1333.25 1325.19 1310.5 1338.6 1352.07 1330.61 1353.96 1362.3 1355.81 1378.55 1395.42 1380.82 1336.64 1326.45 1336.91 1331.29 1339.13 1348.86 1367.21 1348.86 1349.99 1348.78 1360.03 1342.53 1353.11 1371.8 1381.29 1380.02 1367.68 1330.63 1331.34 1326.75 1333.7 1304.34 1293.37 1273.37 1320.65 1308.77 1315.48 1288.14 1276.6 1330.74 1298.42 1329.51 1349.88 1352.99 1341.13 1325.76 1315.22 1322.7 1370.18 1367.53 1369.31 1370.4 1372.54 1365.54 1354.49 1360.55 1332.83 1328.32 1334.43 1364.71 1365.56 1390.33 1388.17 1375.94 1379.93 1388.82 1397.84 1396.37 1390.94 1385.59 1409.34 1413.9 1407.49 1418.26 1392.57 1397.68 1388.28 1403.58 1403.04 1408.66 1423.57 1425.35 1426.63 1413.4 1390.71 1394.35 1375.93 1385.35 1390.84 1398.26 1400.38 1385.67 1377.65 1377.2 1404.05 1360.68 1361.76 1358.44 1335.49 1339.87 1360.03 1360.14 1350.93 1337.81 1342.83 1317.93 1318 1314.29 1321.97 1283.15 1278.38 1280 1284.91 1261.52 1262.9 1252.31 1273.7 1244.69 1253.39 1239.49 1228.3 1214.91 1245.36 1260.32 1260.68 1260 1277 1282.19 1252.54 1257.76 1234.37 1263.2 1284.26 1267.38 1260.31 1249.01 1284.88 1289.19 1266.07 1296.32 1305.32 1289.59 1285.83 1292.93 1298.2 1278.6 1266.69 1274.54 1277.72 1292.2 1266.84 1271.51 1281.66 1300.68 1282.83 1277.58 1274.98 1236.83 1242.31 1267.79 1224.51 1232.04 1249.05 1251.7 1192.7 1213.6 1156.39 1206.51 1255.08 1207.09 1188.22 1185.87 1209.18 1213.27 1106.42 1164.74 1161.06 1114.28 1099.23 1056.89 996.23 984.94 909.92 899.22 1003.35 998.01 907.84 946.43 940.55 985.4 955.05 896.78 908.11 876.77 848.92 940.51 930.09 954.09 968.75 966.3 1005.75 952.77 904.88 930.99 919.21 898.95 852.3 911.29 873.29 850.75 859.12 806.58];

n=length(y_sp);
mm=max(y_sp)-min(y_sp);
miny=min(y_sp);
y=(y_sp-miny)/mm;

% data presentation to neuron network form 
k=1; l=1; window=10;
in=[]; ot=[];
while l<=n-window
   for j=1:window
      in(j,k)=y(l);
      l=l+1;
   end;
   ot(k)=y(l);
   k=k+1;
   l=k;
end;
test=35;
learn=n-test-window;
inp=in(:,1:learn);
out=ot(1:learn);

% creat neuron network
net=newff(minmax(inp),[5 1], {'logsig' 'logsig'},'trainlm');

% initilization parametrs of neuron network 
net.trainParam.epochs = 500;
net.trainParam.show = 10;
net.trainParam.goal = 0.000001;
net.trainParam.time = 3*60*60;

% training neuron network
[net,tr]=train(net,inp,out);

mp=sim(net,in(:,:));
mp=mp.*mm+miny;
ot=ot.*mm+miny;

% point graph
figure(1)
plot(1:learn+test,ot(1:learn+test))
hold on
plot(1:learn,mp(1:learn),'r.--')
plot(learn+1:learn+test,mp(learn+1:learn+test),'k.--')

% quality model assessment
learn
num_parameters=length(getx(net))
l=1;
e_ot=0;
for i=learn+1:learn+test
   r(l)=(mp(i)-ot(i));
   e_ot=e_ot+ot(i);
   l=l+1;
end;
e_ot=e_ot/test;

u=abs(r);
m_o=sum(u)/length(r)

s=0;
s_ot=0;
for i=learn+1:learn+test
   s=s+(ot(i)-mp(i))^2;
   s_ot=s_ot+(ot(i)-e_ot)^2;
end;
skv=sqrt(s/test);
skv_ot=sqrt(s_ot/test);
otn_skv=skv/skv_ot

for i=learn+1:learn+test
   ar(i-learn)=u(i-learn)/ot(i);
end;
max_otkl=max(u), max_otkl_otn=max(ar)
min_otkl=min(u), min_otkl_otn=min(ar)

s=0;
for i=learn+1:learn+test
   if mp(i)>mp(i-1)
      if ot(i)>ot(i-1)
         s=s+1;
      end
   else
      if ot(i)<ot(i-1)
         s=s+1;
      end
   end
end;

sign=s

figure(2)
plot(1:test,ot(learn+1:learn+test),'r.-')
hold on
plot(1:test,mp(learn+1:learn+test),'b.--')